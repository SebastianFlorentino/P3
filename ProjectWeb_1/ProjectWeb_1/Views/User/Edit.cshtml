@model ProjectWeb_1.Models.ViewModel.EditUsersViewModel
@{
    ViewBag.Title = "Editar Registro";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<h2>Edit</h2>

<div class="col-md-12">
    <br />
    <br />

    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { role = "form", @class = "" }))
    {
        @Html.HiddenFor(d => d.Id)

        @Html.LabelFor(d => d.Nombre)
        @Html.TextBoxFor(d => d.Nombre, new { @class = "form-control" })
        @Html.ValidationMessage("Nombre", new { @class = "text-danger" })
        <br />

        @Html.LabelFor(d => d.Email)
        @Html.TextBoxFor(d => d.Email, new { @class = "form-control" })
        @Html.ValidationMessage("Email", new { @class = "text-danger" })
        <br />

        @Html.LabelFor(d => d.Contrasenna)
        @Html.PasswordFor(d => d.Contrasenna, new { @class = "form-control" })//PaswordFor en vez de TextBoxFor
        @Html.ValidationMessage("Contrasenna", new { @class = "text-danger" })
        <br />

        @Html.LabelFor(d => d.ConfirmarContrasenna)
        @Html.PasswordFor(d => d.ConfirmarContrasenna, new { @class = "form-control" })//PaswordFor en vez de TextBoxFor
        @Html.ValidationMessage("ConfirmarContrasenna", new { @class = "text-danger" })
        <br />

        @Html.LabelFor(d => d.Edad)
        @Html.TextBoxFor(d => d.Edad, new { @class = "form-control" })
        @Html.ValidationMessage("Edad", new { @class = "text-danger" })
        <br />

        <div class="float-start">
            <button class="btn btn-success btn-lg">Guardar</button>
            <button class="btn btn-info btn-lg"
                    onclick="document.location.href ='@Url.Content("~/User/Query")'">
                Volver Atras
            </button>
        </div>
    }
</div>
